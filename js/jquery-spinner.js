/*! jQuery spinner - v0.1.0 - 2013-11-05
* https://github.com/xixilive/jquery-spinner
* Copyright (c) 2013 xixilive; Licensed MIT */

!function(n){"use strict";var i,t=function(i,s){return this.$el=i,this.options=n.extend({},t.rules.defaults,t.rules[s.rule]||{},s||{}),this.min=parseFloat(this.options.min)||0,this.max=parseFloat(this.options.max)||0,this.$el.on("focus.spinner",n.proxy(function(n){n.preventDefault(),this.oldValue=this.value()},this)).on("change.spinner",n.proxy(function(n){n.preventDefault(),this.value(this.$el.val())},this)).on("keydown.spinner",n.proxy(function(n){var i={38:"up",40:"down"}[n.which];i&&(n.preventDefault(),this.spin(i))},this)),this.oldValue=this.value(),this.value(this.$el.val()),this};t.rules={defaults:{min:null,max:null,step:1,precision:0},currency:{min:0,max:null,step:.01,precision:2},quantity:{min:1,max:999,step:1,precision:0},percent:{min:1,max:100,step:1,precision:0},month:{min:1,max:12,step:1,precision:0},day:{min:1,max:31,step:1,precision:0},hour:{min:0,max:23,step:1,precision:0},minute:{min:1,max:59,step:1,precision:0},second:{min:1,max:59,step:1,precision:0}},t.prototype={spin:function(n){switch(this.oldValue=this.value(),n){case"up":this.value(this.oldValue+Number(this.options.step,10));break;case"down":this.value(this.oldValue-Number(this.options.step,10))}},value:function(t){if(null===t||void 0===t)return this.numeric(this.$el.val());t=this.numeric(t);var e=this.validate(t);0!==e&&(t=-1===e?this.min:this.max),this.$el.val(t.toFixed(this.options.precision)),this.oldValue!==this.value()&&(this.$el.trigger("changing.spinner",[this.value(),this.oldValue]),clearTimeout(i),i=setTimeout(n.proxy(function(){this.$el.trigger("changed.spinner",[this.value(),this.oldValue])},this),s.delay))},numeric:function(n){return n=this.options.precision>0?parseFloat(n,10):parseInt(n,10),n||this.options.min||0},validate:function(n){return null!==this.options.min&&n<this.min?-1:null!==this.options.max&&n>this.max?1:0}};var s=function(i,s){this.$el=i,this.$spinning=n("[data-spin='spinner']",this.$el),0===this.$spinning.length&&(this.$spinning=n(":input[type='text']",this.$el)),this.spinning=new t(this.$spinning,this.$spinning.data()),this.$el.on("click.spinner","[data-spin='up'],[data-spin='down']",n.proxy(this.spin,this)).on("mousedown.spinner","[data-spin='up'],[data-spin='down']",n.proxy(this.spin,this)),n(document).on("mouseup.spinner",n.proxy(function(){clearInterval(this.spinInterval)},this)),s=n.extend({},s),s.delay&&this.delay(s.delay),s.changed&&this.changed(s.changed),s.changing&&this.changing(s.changing)};s.delay=500,s.prototype={constructor:s,spin:function(i){var t=n(i.currentTarget).data("spin");switch(i.type){case"click":i.preventDefault(),this.spinning.spin(t);break;case"mousedown":0===i.button&&(this.spinInterval=setInterval(n.proxy(function(n){this.spinning.spin(n)},this,n(i.currentTarget).data("spin")),100))}},delay:function(n){var i=parseInt(n,10);i>0&&(this.constructor.delay=i+100)},value:function(){return this.spinning.value()},changed:function(n){this.bindHandler("changed.spinner",n)},changing:function(n){this.bindHandler("changing.spinner",n)},bindHandler:function(i,t){n.isFunction(t)?this.$spinning.on(i,t):this.$spinning.off(i)}},n.fn.spinner=function(i,t){return this.each(function(){var e=n(this),a=e.data("spinner");a||e.data("spinner",a=new s(e,n.extend({},e.data(),i))),("delay"===i||"changed"===i||"changing"===i)&&a[i](t),"spin"===i&&t&&a.spinning.spin(t)})},n(function(){n('[data-trigger="spinner"]').spinner()})}(jQuery);

